const { zokou } = require("../framework/zokou");
const { downloadInstagram, downloadTwitter } = require("gifted-dls");
const BaseUrl = 'https://api.giftedtech.my.id';
const giftedapikey = '_0x5aff35,_0x1876r';

// Commande pour t√©l√©charger des vid√©os Instagram
zokou({
  nomCom: "insta2",
  categorie: "T√©l√©chargement",
  reaction: "üì∏"
}, async (origineMessage, zk, commandeOptions) => {
  const { ms, repondre, arg } = commandeOptions;

  if (!arg[0]) {
    repondre("Veuillez ins√©rer un lien IG s'il vous pla√Æt.");
    return;
  }

  try {
    const videoUrl = arg.join(" ");
    const apiResult = await downloadInstagram(videoUrl, giftedapikey, { baseUrl: BaseUrl });

    if (apiResult.success && apiResult.result.length > 0) {
      const { url } = apiResult.result[0];

      await zk.sendMessage(origineMessage, {
        video: { url: url },
        mimetype: 'video/mp4'
      }, { quoted: ms });

      repondre('T√©l√©chargement r√©ussi Thomas...');
    } else {
      repondre('√âchec du t√©l√©chargement de l\'video. Veuillez r√©essayer plus tard.');
    }
  } catch (error) {
    console.error('Erreur de l\'API :', error);
    repondre('Une erreur est survenue lors de la recherche ou du t√©l√©chargement de l\'video.');
  }
});

// Commande pour t√©l√©charger des vid√©os Twitter
zokou({
  nomCom: "twitter2",
  categorie: "T√©l√©chargement",
  reaction: "üê¶"
}, async (origineMessage, zk, commandeOptions) => {
  const { ms, repondre, arg } = commandeOptions;

  if (!arg[0]) {
    repondre("Veuillez ins√©rer un lien Twitter s'il vous pla√Æt.");
    return;
  }

  try {
    const videoUrl = arg.join(" ");
    const apiResult = await downloadTwitter(videoUrl, giftedapikey, { baseUrl: BaseUrl });

    // Log de la r√©ponse de l'API pour d√©bogage
    console.log('R√©ponse de l\'API Twitter :', apiResult);

    if (apiResult.success && apiResult.result.downloads && apiResult.result.downloads.length > 0) {
      const downloads = apiResult.result.downloads;
      const { url } = downloads[0]; // Prendre le premier lien disponible

      await zk.sendMessage(origineMessage, {
        video: { url: url },
        mimetype: 'video/mp4'
      }, { quoted: ms });

      repondre('T√©l√©chargement r√©ussi avec Twitter Thomas...');
    } else {
      repondre('Aucun t√©l√©chargement disponible. Veuillez v√©rifier le lien et r√©essayer.');
    }
  } catch (error) {
    console.error('Erreur de l\'API :', error);
    repondre('Une erreur est survenue lors de la recherche ou du t√©l√©chargement de la vid√©o.');
  }
});
